// ????????????????????????????????????????????????????????????????
// ?????????????????????????? Tiny App ????????????????????????????
// ????????????????????????????????????????????????????????????????

// ?? A url shortener web app
// ?? 
// ?? Created on April 16, 2020
// ?? Published on April 16, 2020
// ??
// ?? run npm start to run server
// ?? uses nodemon as a dev dependency
// ??
// ?? Using Better Comments for color coding
// ?? The following is the color key for app commenting
// ??  Key   Meaning   Hex 
//     ??    Titles    (#24c5ff)
//     ~~    Notes     (#ff9900)
//     ^^    Requests  (#ff69b4)
//     !!    Errors    (#ff0011)
//     ##    DataBase  (#78f022)
//     **    Security  (#9822f2)
//     $$    WARNING   (#fff700)


// ???????????????????????? File Modules ??????????????????????????
// ?? Controllers
const viewController = require('./src/controllers/viewController')

// ?? Routes
const viewRouter = require('./src/routes/viewRouter');
const userRouter = require('./src/routes/userRouter');

// ?? Utilities
const morgan = require('./src/utils/morganCustom')

// ???????????????????????? Node Modules ??????????????????????????
const path = require('path');

// ??????????????????????? Vendor Modules ?????????????????????????
const chalk = require('chalk');
const cookieSession = require('cookie-session')
const express = require('express');
const methodOverride = require('method-override');

// ????????????????????????????????????????????????????????????????
// ???????????????????????? Application ???????????????????????????
// ????????????????????????????????????????????????????????????????

// ~~ Initialize the app
const app = express();

// ~~ Set template engine
app.set('view engine', 'ejs');

// ~~ Import templates
app.set('views', path.join(__dirname, 'src/views'));

app.use(express.static(path.join(__dirname, '/public')));

// ~~ Pretty Logging to console
app.use(morgan)

// ~~ Parse body
app.use(express.urlencoded({ extended: true }));

// ~~ Parse cookies
app.use(cookieSession({
  name: 'session',
  keys: ['Secret Cookie Key']
}));

// ~~ Set request time to request obj
app.use((req, res, next) => {

  // ~~ Get Date
  let requestTime = new Date();

  // ~~ Set Date and app name to req obj
  req.requestTime = requestTime.toISOString;

  // ~~ Set App name for logging
  req.appName = 'TINY APP';

  // ~~ Start template variables
  req.templateVars = {};

  // ~~ Check for user
  if (req.session.user !== undefined) {
    // ~~ Set template variables
    req.templateVars.user = req.session.user;
  } else {
    
    // ~~ Set template variables to null
    req.templateVars.user = null;
  }

  if (req.session.title !== undefined) {
    req.templateVars.title = req.session.title;
  } else {
    req.templateVars.title = null;
  }

  // ~~ Log Data to console
  console.log(chalk.magenta.bold.inverse(`Request Time: ${requestTime}`));

  next();
})

// ~~ Set Method override
app.use(methodOverride('_method'));

// ??????????????????????????? Routes ?????????????????????????????
app.use('/urls', viewRouter);
app.use('/user', userRouter);
app.get('/', viewController.getWelcome);
app.get('*', viewController.getSorry)

module.exports = app;